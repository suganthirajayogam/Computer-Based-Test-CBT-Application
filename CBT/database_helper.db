import 'dart:io';
import 'dart:typed_data';
import 'package:flutter/services.dart';
import 'package:sqflite/sqflite.dart';
import 'package:path/path.dart';
import '../models/employee.dart';

class DatabaseHelper {
  static final DatabaseHelper instance = DatabaseHelper._internal();
  static Database? _database;

  factory DatabaseHelper() => instance;

  DatabaseHelper._internal();

  Future<Database> get database async {
    if (_database != null) return _database!;
    _database = await _initDB('emp_db_all.db'); // üëà Match your file name
    return _database!;
  }

  Future<Database> _initDB(String fileName) async {
    final dbPath = await getDatabasesPath();
    final path = join(dbPath, fileName);

    // ‚úÖ If database not exists, copy from assets
    if (!await File(path).exists()) {
      ByteData data = await rootBundle.load('assets/db/$fileName');
      List<int> bytes = data.buffer.asUint8List(data.offsetInBytes, data.lengthInBytes);
      await File(path).writeAsBytes(bytes);
    }

    return await openDatabase(path);
  }

  Future<Employee?> getEmployeeByEmployeeId(String empId) async {
    final db = await database;
    final result = await db.query(
      'emp_db', // ‚ö†Ô∏è use your actual table name here
      where: 'employee_id = ?',
      whereArgs: [empId],
    );

    if (result.isNotEmpty) {
      return Employee.fromMap(result.first);
    }
    return null;
  }
}
